name: .NET NuGet Package CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Добавляем триггер для ручного запуска
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    

  pack-and-publish:
    needs: build-and-test
    runs-on: windows-latest
    # Запускаем только для мейн ветки при пуше (не для PR)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore  CommonUtils/CommonUtils.sln

    - name: Pack NuGet packages
      run: |
        # Получаем все проекты, исключая тестовые
        $projects = Get-ChildItem -Recurse -Filter *.csproj | Where-Object { $_.FullName -notmatch 'test|Test' }
        foreach ($project in $projects) {
          echo "Packing $($project.Name)"
          dotnet pack $project.FullName `
            --configuration Release `
            -p:VersionPrefix=1.0.0 `
            -p:VersionSuffix=ci-${{ github.run_number }} `
            --output nupkg
        }

    - name: Upload NuGet packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: nupkg/*.nupkg

    # Раскомментируйте для публикации в NuGet.org
    # - name: Publish to NuGet
    #   run: |
    #     $packages = Get-ChildItem -Path nupkg -Filter *.nupkg
    #     foreach ($package in $packages) {
    #       dotnet nuget push $package.FullName --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
    #     }
