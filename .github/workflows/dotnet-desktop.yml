name: .NET NuGet Package CI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  SOLUTION_PATH: CommonUtils/CommonUtils.sln
  GITHUB_PACKAGES_URL: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

jobs:
  build-and-pack:
    runs-on: windows-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Configure GitHub Packages source
      run: |
        # Удаляем источник, если он уже существует
        dotnet nuget remove source "github" || true
        dotnet nuget remove source "My GitHub" || true
        # Добавляем источник GitHub Packages с аутентификацией
        dotnet nuget add source ${{ env.GITHUB_PACKAGES_URL }} -n github-packages -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text

    - name: Restore dependencies
      run: dotnet restore $env:SOLUTION_PATH

    - name: Build
      run: dotnet build $env:SOLUTION_PATH --configuration Release --no-restore

    - name: Test
      run: dotnet test $env:SOLUTION_PATH --configuration Release --no-build --verbosity normal

    - name: Pack NuGet packages
      run: |
        $projects = Get-ChildItem -Recurse -Filter *.csproj | Where-Object { $_.FullName -notmatch 'test|Test' }
        foreach ($project in $projects) {
          Write-Host "Packing $($project.Name)"
          dotnet pack $project.FullName --configuration Release -p:PackageVersion=1.0.0-ci-${{ github.run_number }} --output nupkg
        }

    - name: Publish to GitHub Packages
      run: dotnet nuget push nupkg/*.nupkg --source "github-packages"
