<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommonUtils</name>
    </assembly>
    <members>
        <member name="T:CommonUtils.GlobalConstant">
            <summary>
            Глобальные константы и настройки приложения
            </summary>
        </member>
        <member name="P:CommonUtils.GlobalConstant.AppDataPath">
            <summary>
            Путь к каталогу данных приложения
            </summary>
        </member>
        <member name="P:CommonUtils.GlobalConstant.APIKey">
            <summary>
            Ключ API по умолчанию, используется для шифрования при отключенной БД
            </summary>
        </member>
        <member name="P:CommonUtils.GlobalConstant.UseDataBase">
            <summary>
            Флаг использования базы данных
            </summary>
            <remarks>
            Если true - настройки хранятся в БД
            Если false - настройки хранятся в файле
            </remarks>
        </member>
        <member name="P:CommonUtils.GlobalConstant.MainFormName">
            <summary>
            Название главной формы приложения
            </summary>
        </member>
        <member name="P:CommonUtils.GlobalConstant.DatabaseFilePath">
            <summary>
            Путь к файлу базы данных (актуально при UseDataBase = true)
            </summary>
        </member>
        <member name="P:CommonUtils.GlobalConstant.DatabaseName">
            <summary>
            Название базы данных (актуально при UseDataBase = true)
            </summary>
        </member>
        <member name="P:CommonUtils.GlobalConstant.DatabaseDirectoryPath">
            <summary>
            Путь к файлу базы данных (актуально при UseDataBase = true)
            </summary>
        </member>
        <member name="P:CommonUtils.GlobalConstant.SettingsFilePath">
            <summary>
            Путь к файлу настроек (актуально при UseDataBase = false)
            </summary>
        </member>
        <member name="M:CommonUtils.GlobalConstant.GetConnectionString">
            <summary>
            Получает строку подключения к базе данных
            </summary>
        </member>
        <member name="T:CommonUtils.Objects.LocalizableStringExtensions">
            <summary>
            LocalizableString extensions
            </summary>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableStringExtensions.AsLocalizableString(System.String)">
            <summary>
            String AsLocalizableString
            </summary>
            <param name="s"></param>
            <returns></returns> 
        </member>
        <member name="T:CommonUtils.Objects.LocalizableString">
            <summary>
            Multi-languages string
            </summary>
        </member>
        <member name="F:CommonUtils.Objects.LocalizableString.DefaultLanguageKey">
            <summary>
            DefaultLanguageKey
            </summary>
        </member>
        <member name="P:CommonUtils.Objects.LocalizableString.HaveMultipleLanguages">
            <summary>
            HaveMultipleLanguages
            </summary>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="originalString"></param>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToString">
            <summary>
            ToString
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToString(System.String)">
            <summary>
            ToString for languageCode
            </summary>
            <param name="languageCode"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToString(System.String,System.Boolean)">
            <summary>
            ToString for languageCode with getFirstValueIfNotExists option
            </summary>
            <param name="languageCode"></param>
            <param name="getFirstValueIfNotExists"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.op_Implicit(CommonUtils.Objects.LocalizableString)~System.String">
            <summary>
            User-defined conversion from LocalizableString to String 
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.op_Implicit(System.String)~CommonUtils.Objects.LocalizableString">
            <summary>
            User-defined conversion from String to LocalizableString 
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.op_Inequality(CommonUtils.Objects.LocalizableString,CommonUtils.Objects.LocalizableString)">
            <summary>
            operator !=
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.op_Equality(CommonUtils.Objects.LocalizableString,CommonUtils.Objects.LocalizableString)">
            <summary>
            operator ==
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.Equals(System.Object)">
            <summary>
            Equals
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.GetHashCode">
            <summary>
            GetHashCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.CompareTo(System.String)">
            <summary>
            CompareTo
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.Equals(System.String)">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.Clone">
            <summary>
            Clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.CompareTo(System.Object)">
            <summary>
            CompareTo
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.GetEnumerator">
            <summary>
            GetEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.System#Collections#Generic#IEnumerable{System#Char}#GetEnumerator">
            <summary>
            GetEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.GetTypeCode">
            <summary>
            GetTypeCode
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToBoolean(System.IFormatProvider)">
            <summary>
            ToBoolean
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToChar(System.IFormatProvider)">
            <summary>
            ToChar
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToSByte(System.IFormatProvider)">
            <summary>
            ToSByte
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToByte(System.IFormatProvider)">
            <summary>
            ToByte
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToInt16(System.IFormatProvider)">
            <summary>
            ToInt16
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToUInt16(System.IFormatProvider)">
            <summary>
            ToUInt16
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToInt32(System.IFormatProvider)">
            <summary>
            ToInt32
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToUInt32(System.IFormatProvider)">
            <summary>
            ToUInt32
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToInt64(System.IFormatProvider)">
            <summary>
            ToInt64
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToUInt64(System.IFormatProvider)">
            <summary>
            ToUInt64
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToSingle(System.IFormatProvider)">
            <summary>
            ToSingle
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToDouble(System.IFormatProvider)">
            <summary>
            ToDouble
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToDecimal(System.IFormatProvider)">
            <summary>
            ToDecimal
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToDateTime(System.IFormatProvider)">
            <summary>
            ToDateTime
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToString(System.IFormatProvider)">
            <summary>
            ToString
            </summary>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToType(System.Type,System.IFormatProvider)">
            <summary>
            ToType
            </summary>
            <param name="conversionType"></param>
            <param name="provider"></param>
            <returns></returns>
        </member>
        <member name="P:CommonUtils.Objects.LocalizableString.Length">
            <summary>
            Length
            </summary>
        </member>
        <member name="P:CommonUtils.Objects.LocalizableString.Empty">
            <summary>
            Empty
            </summary>
        </member>
        <member name="P:CommonUtils.Objects.LocalizableString.OriginalString">
            <summary>
            OriginalString
            </summary>
        </member>
        <member name="P:CommonUtils.Objects.LocalizableString.CurrentLanguageKey">
            <summary>
            Текущий ключ языка.
            Двухбуквенный, например, ru, en, de.
            </summary>
        </member>
        <member name="P:CommonUtils.Objects.LocalizableString.StringCurrent">
            <summary>
            StringCurrent
            </summary>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.GetString(System.String,System.Boolean,System.String)">
            <summary>
            GetString
            </summary>
            <param name="s"></param>
            <param name="getFirstValueIfNotExists"></param>
            <param name="codeLanguage"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.SetString(System.String,System.String)">
            <summary>
            Метод для установки значения в указанном языке.
            Строка всегда дополняется штуками вроде "\u0010", даже если в строке присутствует всего один язык.
            </summary>
            <param name="languageKey"></param>
            <param name="text"></param>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.SetCurrentString(System.String)">
            <summary>
            Метод для установки значения в указанном языке.
            Строка всегда дополняется штуками вроде "\u0010", даже если в строке присутствует всего один язык.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.GetCurrentString(System.String)">
            <summary>
            Get current string by language key
            </summary>
            <param name="languageKey"></param>
        </member>
        <member name="P:CommonUtils.Objects.LocalizableString.Languages">
            <summary>
            Language codes in current string
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.Contains(System.String)">
            <summary>
            Contains
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.Replace(System.Char,System.Char)">
            <summary>
            Replace
            </summary>
            <param name="oldChar"></param>
            <param name="newChar"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.Replace(System.String,System.String)">
            <summary>
            Replace
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.Trim">
            <summary>
            Trim
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToLower">
            <summary>
            ToLower
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.ToUpper">
            <summary>
            ToUpper
            </summary>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.IndexOf(System.String)">
            <summary>
            IndexOf
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.IndexOf(System.Char)">
            <summary>
            IndexOf
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:CommonUtils.Objects.LocalizableString.IndexOf(System.String,System.StringComparison)">
            <summary>
            IndexOf
            </summary>
            <param name="value"></param>
            <param name="comparisonType"></param>
            <returns></returns>
        </member>
        <member name="T:CommonUtils.Settings.Attributes.CryptAttribute">
            <summary>
            Указывает, должно ли свойство/поле шифроваться при сохранении
            </summary>
        </member>
        <member name="P:CommonUtils.Settings.Attributes.CryptAttribute.IsCrypt">
            <param name="isCrypt">Требуется ли шифрование</param>
        </member>
        <member name="T:CommonUtils.Settings.Attributes.DoNotSaveToFileAttribute">
            <summary>
            Указывает, что свойство/поле не записываться в файл настроек
            </summary>
        </member>
        <member name="T:CommonUtils.Settings.BaseSettings">
            <summary>
            Базовый класс для настроек приложения
            </summary>
        </member>
        <member name="T:CommonUtils.Settings.GlobalSettings">
            <summary>
            Глобальные настройки приложения, доступные всем модулям
            </summary>
        </member>
        <member name="P:CommonUtils.Settings.GlobalSettings.ProgramPath">
            <summary>
            Путь к исполняемому файлу программы (не сохраняется в файл настроек)
            </summary>
        </member>
        <member name="P:CommonUtils.Settings.GlobalSettings.ApiKey">
            <summary>
            API Key
            </summary>
        </member>
        <member name="P:CommonUtils.Settings.GlobalSettings.Theme">
            <summary>
            Текущая тема оформления
            </summary>
        </member>
        <member name="T:CommonUtils.Settings.SettingsContractResolver">
            <summary>
            Кастомный резолвер для сериализации настроек
            </summary>
        </member>
    </members>
</doc>
